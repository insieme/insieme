Index: lib/Format/UnwrappedLineParser.cpp
===================================================================
--- lib/Format/UnwrappedLineParser.cpp	(revision 244596)
+++ lib/Format/UnwrappedLineParser.cpp	(working copy)
@@ -1375,9 +1375,27 @@
     if (ShouldBreakBeforeBrace(Style, InitialToken))
       addUnwrappedLine();
 
-    bool AddLevel = Style.NamespaceIndentation == FormatStyle::NI_All ||
-                    (Style.NamespaceIndentation == FormatStyle::NI_Inner &&
-                     DeclarationScopeStack.size() > 1);
+    bool AddLevel = Style.NamespaceIndentation == FormatStyle::NI_All;
+
+    if(Style.NamespaceIndentation == FormatStyle::NI_Inner) {
+        AddLevel = true;
+        auto oldPos = Tokens->getPosition();
+        auto next = Tokens->getNextToken();
+        auto nnext = Tokens->getNextToken();
+        // let's see if we have a directly nested ns
+        if(next->is(tok::kw_namespace)) {
+            if(nnext->is(tok::l_brace)) {
+                // *do* add a level for current ns, since anonymous is nested
+            } else if(nnext->is(tok::identifier) && nnext->TokenText.str() == "detail") {
+                // *do* add a level for current ns, since "detail" is nested
+            } else {
+                // don't add a level since next ns is non-detail non-anon
+                AddLevel = false;
+            }
+       }
+       Tokens->setPosition(oldPos);
+    }
+
     parseBlock(/*MustBeDeclaration=*/true, AddLevel);
     // Munch the semicolon after a namespace. This is more common than one would
     // think. Puttin the semicolon into its own line is very ugly.
@@ -1826,6 +1844,7 @@
   CurrentLines->push_back(std::move(*Line));
   Line->Tokens.clear();
   if (CurrentLines == &Lines && !PreprocessorDirectives.empty()) {
+    for(auto& line : PreprocessorDirectives) line.Level += (CurrentLines->end()-1)->Level;
     CurrentLines->append(
         std::make_move_iterator(PreprocessorDirectives.begin()),
         std::make_move_iterator(PreprocessorDirectives.end()));
