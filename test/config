includes=
intercepted_header_file_dirs=
files=
definitions=
definitions[insiemecc_run_c_compile]="_GNU_SOURCE"
definitions[insiemecc_run_cpp_compile]="_GNU_SOURCE"
compFlags=
libPaths=
libNames=
excludeSteps="*_ocl_*","*_cpp_*","*_run_*"
use_omp=0
use_opencl=0
use_o3=1
use_c=0
use_gnu90=0
use_gnu99=0
use_cpp=0
use_c[ref_c_compile]=1
use_c[insiemecc_run_c_compile]=1
use_c[insiemecc_seq_c_compile]=1
use_c[insiemecc_ocl_c_compile]=1
use_c[insiemecc_c_sema]=1
use_cpp[ref_cpp_compile]=1
use_cpp[insiemecc_cpp_sema]=1
use_cpp[insiemecc_run_cpp_convert]=1
use_cpp[insiemecc_seq_cpp_convert]=1
use_cpp[insiemecc_run_cpp_compile]=1
use_cpp[insiemecc_seq_cpp_compile]=1
use_libmath=0
use_libmath[insiemecc_run_c_compile]=1
use_libpthread=0
use_libpthread[insiemecc_run_c_compile]=1
outputAwk=

# finally the compiler configuration settings
compilerConfigurationFile[insiemecc]="${CUR_CONFIG_PATH}/compilerConfiguration.insiemecc"
compilerConfigurationFile[gcc]="${CUR_CONFIG_PATH}/compilerConfiguration.gcc"
compilerConfigurationFile[g++]="${CUR_CONFIG_PATH}/compilerConfiguration.g++_and_clang"
compilerConfigurationFile[clang]="${CUR_CONFIG_PATH}/compilerConfiguration.g++_and_clang"
compilerConfigurationFile[clang++]="${CUR_CONFIG_PATH}/compilerConfiguration.g++_and_clang"
