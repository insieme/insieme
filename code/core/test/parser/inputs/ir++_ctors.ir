
alias int = int<4>;

def struct A {

	x : int;
	
	ctor () {
		x = 0;
	}
	
	ctor (x : int) {
		this.x = x;
	}
};

unit main() {

	// create a stack based A
	var ref<A> a1 = A::(a1);
	
	// create a heap based A
	var ref<A> a2 = A::(ref_new(type_lit(A)));
	
	// create a stack based A with initial value
	var ref<A> a3 = A::(a3, 2);
	
	// create a stack based A with initial value
	var ref<A> a4 = A::(ref_new(type_lit(A)), 3);
	
	// re-initialize an existing variable (placement new)
	var ref<A> a5;
	A::(a5, 4);
	
	print("a1.x = %d\n", *a1.x);
	print("a2.x = %d\n", *a2.x);
	print("a3.x = %d\n", *a3.x);
	print("a4.x = %d\n", *a4.x);
	print("a5.x = %d\n", *a5.x);
			
}
