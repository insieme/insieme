
let int = int<4>;

let C = struct {
	int sum;
};

let Ctor = lambda ctor C::() {
	this.sum = 0;
};

let add = lambda C::(int x)->unit {
	this.sum = this.sum + x;
};

let getSum = lambda C::()->int {
	return *this.sum;
};

let newObj = lambda (ctor 'a::() x)->ref<'a> {
	return x(new(undefined('a)));
};

unit main() {

	// create a new object instance
    decl ref<C> c = newObj(Ctor);
	
	// work with the object
	print("%d\n", c->getSum());
	print("%d\n", c->add(3));
	print("%d\n", c->getSum());
	
}
