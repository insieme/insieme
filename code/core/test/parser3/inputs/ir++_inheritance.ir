
let int = int<4>;

let A = struct {
	int x;
};

let B = struct : [A] {
	int y;
};

let C = struct : [B] {
	int z;
};

int main() {

	// -------- handle an instance of A --------
	decl ref<A> a;
	a.x = 1;
	
	
	// -------- handle an instance of B --------
	decl ref<B> b;
	
	// direct access
	b.as(A).x = 1;
	b.y = 2;
	
	// indirect access of A's x
	decl auto bA = b.as(A);
	bA.x = 3;
	
	
	// -------- handle an instance of C --------
	decl ref<C> c;
	
	// access B's A's x
	c.as(B).as(A).x = 1;

	// access B's y
	c.as(B).y = 2;
	
	// access C's z
	c.z = 3;
	
	print("x = %d\n", *(c.as(B).as(A).x));
	print("y = %d\n", *(c.as(B).y));
	print("z = %d\n", *c.z);
	
	return 0;
}
