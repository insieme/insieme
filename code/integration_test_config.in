/**
 * Copyright (c) 2002-2017 Distributed and Parallel Systems Group,
 *                Institute of Computer Science,
 *               University of Innsbruck, Austria
 *
 * This file is part of the INSIEME Compiler and Runtime System.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * If you require different license terms for your intended use of the
 * software, e.g. for proprietary commercial or industrial use, please
 * contact us at:
 *                   insieme@dps.uibk.ac.at
 *
 * We kindly ask you to acknowledge the use of this software in any
 * publication or other disclosure of results by referring to the
 * following citation:
 *
 * H. Jordan, P. Thoman, J. Durillo, S. Pellegrini, P. Gschwandtner,
 * T. Fahringer, H. Moritsch. A Multi-Objective Auto-Tuning Framework
 * for Parallel Codes, in Proc. of the Intl. Conference for High
 * Performance Computing, Networking, Storage and Analysis (SC 2012),
 * IEEE Computer Society Press, Nov. 2012, Salt Lake City, USA.
 *
 */
# some configuration options 
compiler[ref_c_compile]=@INSIEME_C_BACKEND_COMPILER@
compiler[ref_cpp_compile]=@INSIEME_CXX_BACKEND_COMPILER@
compiler[insiemecc_c_sema]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_cpp_sema]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_run_c_convert]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_run_cpp_convert]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_run_c_compile]=@INSIEME_C_BACKEND_COMPILER@
compiler[insiemecc_run_cpp_compile]=@INSIEME_CXX_BACKEND_COMPILER@
compiler[insiemecc_seq_c_convert]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_seq_cpp_convert]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_seq_c_compile]=@INSIEME_C_BACKEND_COMPILER@
compiler[insiemecc_seq_cpp_compile]=@INSIEME_CXX_BACKEND_COMPILER@
compiler[insiemecc_ocl_c_convert]=@PROJECT_BINARY_DIR@/driver/insiemecc
compiler[insiemecc_ocl_c_compile]=@INSIEME_C_BACKEND_COMPILER@

# boost environment
boost_include=@Boost_INCLUDE_DIRS@
boost_lib=@Boost_LIBRARY_DIRS@

# result comparison script
compareOutputScript=@PROJECT_SOURCE_DIR@/../test/compareOutput

# time utility
time_executable=@TIME_EXECUTABLE@

# config properties
includes=
intercepted_header_file_dirs=
libPaths=
libNames=

# finally the compiler configuration settings
compilerConfigurationFile[insiemecc]="@PROJECT_SOURCE_DIR@/../test/compilerConfiguration.insiemecc"
compilerConfigurationFile[gcc]="@PROJECT_SOURCE_DIR@/../test/compilerConfiguration.gcc"
compilerConfigurationFile[g++]="@PROJECT_SOURCE_DIR@/../test/compilerConfiguration.g++_and_clang"
compilerConfigurationFile[clang]="@PROJECT_SOURCE_DIR@/../test/compilerConfiguration.g++_and_clang"
compilerConfigurationFile[clang++]="@PROJECT_SOURCE_DIR@/../test/compilerConfiguration.g++_and_clang"
